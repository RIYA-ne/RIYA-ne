⚪FORM VALIDATION ⚪
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Validation</title>
    <style>
        .error { color: red; }
    </style>
</head>

    <h2>Form Validation</h2>

    <form id="registrationForm">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required><br><br>

        <label for="age">Age:</label>
        <input type="number" id="age" name="age" required><br><br>

        <label for="phone">Phone Number:</label>
        <input type="text" id="phone" name="phone" required><br><br>

        <button type="submit">Submit</button>

        <p id="errorMsg" class="error"></p>
    </form>



    <script>
        document.getElementById('registrationForm').addEventListener('submit', function(event) {
    event.preventDefault();

    // Get form values
    const name = document.getElementById('name').value.trim();
    const age = document.getElementById('age').value;
    const phone = document.getElementById('phone').value.trim();
    const errorMsg = document.getElementById('errorMsg');

    // Clear previous error messages
    errorMsg.textContent = '';

    // Validate the form fields
    if (name === '') {
        errorMsg.textContent = 'Name is required.';
        return;
    }

    if (age === '' || age < 18) {
        errorMsg.textContent = 'Age is required and must be 18 or above.';
        return;
    }

    if (phone === '' || isNaN(phone) || phone.length !== 10) {
        errorMsg.textContent = 'Phone number is required, must be a number, and must be exactly 10 digits.';
        return;
    }

    // Submit the form if all validations pass
    alert('Form submitted successfully!');
    // Optionally: document.getElementById('registrationForm').submit(); // If you want to actually submit the form

});
    </script>
    </body>

</html>
.......................,..................,.................................
⚪BULB⚪
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LAB 3</title>
</head>
<body>
    <p id="abc"> </p>
    <p id="ab"> </p>
    <p id="a"></p>
    <h1 id="zx">Tanmai</h1>
   <button onclick="change_colour()">CHANGE COLOUR</button> <br><br>
   <p>
    <img id="bulb" src="bulboff.png" alt="">
</p>
<button onclick="onbulb()" id="btn">On</button> <br><br>
    <button onclick="window.print()">Print</button>

    <script>
        const array=["one","two","three"];
        let text= "";
        for(let i=0; i<array.length; i++)
        {
            text += array[i]+ "<br>";
        }
        
        document.getElementById("abc").innerHTML=text;

        const object={ name:"Tanmai", class:"Sybca",div:"B"};
        let text1=""
        for (let x in object){
            text1+= object[x]+ "<br> ";
        }
        document.getElementById("ab").innerHTML=text1;
        
        
        let text3 ="Tanmai";
        text_Print=""
        for(let x of text3)
    {
        text_Print+= x+ "";

    }
    document.getElementById("a").innerHTML=text_Print;

    function change_colour(){
        document.getElementById("zx").style.color="red";
    }

    function onbulb(){
        let button = document.getElementById("btn");
        let bulb = document.getElementById("bulb");
          if (button.innerHTML=="On") {
            bulb.src="bulbon.png";
            button.innerHTML="Off"; 

          }
          else 
          {
            button.innerHTML="On";
            bulb.src="bulboff.png";
          }

      }
    </script>
</body>
</html>
.,...................................................................
⚪ CALCULATOR ⚪
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }
        .calculator {
            display: inline-block;
            border: 1px solid #ccc;
            padding: 20px;
            border-radius: 10px;
            background-color: #f4f4f4;
        }
        #display {
            width: 220px;
            height: 40px;
            text-align: right;
            margin-bottom: 10px;
            font-size: 1.5em;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        button {
            width: 50px;
            height: 50px;
            margin: 5px;
            font-size: 1.2em;
            cursor: pointer;
        }
        .wide {
            width: 110px;
        }
    </style>
</head>
<body>

    <h1>Simple Calculator</h1>

    <div class="calculator">
        <input type="text" id="display" disabled>

        <br>

        <button onclick="clearDisplay()">C</button>
        <button onclick="backspace()">⌫</button>
        <button onclick="insertOperator('/')">/</button>
        <button onclick="insertOperator('*')">*</button>

        <br>

        <button onclick="insertNumber('7')">7</button>
        <button onclick="insertNumber('8')">8</button>
        <button onclick="insertNumber('9')">9</button>
        <button onclick="insertOperator('-')">-</button>

        <br>

        <button onclick="insertNumber('4')">4</button>
        <button onclick="insertNumber('5')">5</button>
        <button onclick="insertNumber('6')">6</button>
        <button onclick="insertOperator('+')">+</button>

        <br>

        <button onclick="insertNumber('1')">1</button>
        <button onclick="insertNumber('2')">2</button>
        <button onclick="insertNumber('3')">3</button>
        <button onclick="calculate()">=</button>

        <br>

        <button onclick="insertNumber('0')" class="wide">0</button>
        <button onclick="insertDot()">.</button>
    </div>

    <script>
        let display = document.getElementById("display");

        function clearDisplay() {
            display.value = "";
        }

        function backspace() {
            display.value = display.value.slice(0, -1);
        }

        function insertNumber(number) {
            display.value += number;
        }

        function insertOperator(operator) {
            if (display.value && !isNaN(display.value.slice(-1))) {
                display.value += operator;
            }
        }

        function insertDot() {
            const parts = display.value.split(/[\+\-\*\/]/);
            if (parts[parts.length - 1] && !parts[parts.length - 1].includes('.')) {
                display.value += '.';
            }
        }

        function calculate() {
            try {
                display.value = eval(display.value);
            } catch (error) {
                display.value = "Error";
            }
        }
    </script>

</body>
</html>
⚪ angular ⚪
label{
    padding: auto;
}
input{
    margin: 4px 13px;
}
<h2>Register User</h2>
<form>
  <label for="firstName">First Name:</label>
  <input type="text" [(ngModel)]="firstName" name="firstName" required><br>

  <label for="lastName">Last Name:</label>
  <input type="text" [(ngModel)]="lastName" name="lastName" required><br>

  <label for="email">Email:</label>
  <input type="email" [(ngModel)]="email" name="email" required><br>

  <label for="Age">Age:</label>
  <input type="number" [(ngModel)]="Age" name="Age" required><br><br>

  <button type="button" (click)="registerUser()">Register</button>
</form>
import { Component } from '@angular/core';
import { UserService } from '../user.service';
import { User } from '../user.model';

@Component({
  selector: 'app-rigister',
  templateUrl: './rigister.component.html',
  styleUrl: './rigister.component.css'
})
export class RigisterComponent {
  firstName: string = '';
  lastName: string = '';
  email: string = '';
  Age: string = '';

  constructor(private userService: UserService) { }

  registerUser() {
    const newUser: User = {
      firstName: this.firstName,
      lastName: this.lastName,
      email: this.email,
      Age: this.Age
    };
    this.userService.addUser(newUser);
    // Clear the form after registration
    this.firstName = '';
    this.lastName = '';
    this.email = '';
    this.Age = '';
}
}
<h2>Registered Users</h2>
<ul>
  <li *ngFor="let user of users">
    {{user.firstName}} {{user.lastName}} <br> {{user.email}} <br> {{user.Age}} 
  </li>
</ul>
[11/15, 2:28 PM] Tanmai: import { Component } from '@angular/core';
import { UserService } from '../user.service';
import { User } from '../user.model';

@Component({
  selector: 'app-user-list',
  templateUrl: './user-list.component.html',
  styleUrl: './user-list.component.css'
})
export class UserListComponent {
  users: User[] = [];

  constructor(private userService: UserService) {
    this.users = this.userService.getUsers();
  }
}
 div {
    background-color: aqua;
    border: 1px solid black;
    padding: 10px;
  }
<div style="display: flex;">
  <div style="flex: 1; padding: 20px;">
    <app-rigister></app-rigister>
  </div>
  <div style="flex: 1; padding: 20px;">
    <app-user-list></app-user-list>
  </div>
</div>
 export interface User {
    firstName: string;
    lastName: string;
    email: string;
    Age: string;
  }
 import { Injectable } from '@angular/core';
import { User } from './user.model';

@Injectable({
  providedIn: 'root'
})
export class UserService {
  private users: User[] = [];

  constructor() { }
    // Method to add user
    addUser(user: User) {
      this.users.push(user);
    }
  
    // Method to get all users
    getUsers(): User[] {
      return this.users;
    }
}
⚪login page⚪
index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <form id="loginForm" class="login-form">
            <h1>Login</h1>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" placeholder="Enter your email" required>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" placeholder="Enter your password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
    <script src="script.js"></script>
</body>
</html>
style.css
/* General Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: linear-gradient(135deg, #4facfe, #00f2fe);
}

.container {
    width: 100%;
    max-width: 400px;
    background: #fff;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

h1 {
    text-align: center;
    margin-bottom: 1.5rem;
    color: #333;
}

.form-group {
    margin-bottom: 1rem;
}

label {
    display: block;
    margin-bottom: 0.5rem;
    color: #555;
}

input {
    width: 100%;
    padding: 0.8rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
}

input:focus {
    outline: none;
    border-color: #4facfe;
}

button {
    width: 100%;
    padding: 0.8rem;
    background-color: #4facfe;
    border: none;
    border-radius: 4px;
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #00c6ff;
}

@media (max-width: 480px) {
    .container {
        padding: 1.5rem;
    }

    h1 {
        font-size: 1.5rem;
    }

    button {
        font-size: 0.9rem;
    }
}
script.js
 document.getElementById('loginForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;

    if (email && password) {
        alert(`Welcome, ${email}!`);
    } else {
        alert('Please fill in all fields.');
    }
});
[11/16, 12:09 PM] Tanmai: script.js
